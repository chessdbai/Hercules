declare module 'react-intl-tel-input' {

  import React, {Component, CSSProperties} from 'react';

  export interface SelectedCountryInputValue {
    areaCodes: string[]
    dialCode: string
    iso2: string
    name: string
    priority: number
  }

  export interface IntlTelInputProps {
    /** Container CSS class name. */
    containerClassName?:	string;
    /** Text input CSS class name. */
    inputClassName?: string,
    /** It's used as `input` field `name` attribute. */
    fieldName?: string,
    /** It's used as `input` field `id` attribute. */
    fieldId?: string,
    /** The value used to initialize input. This will only work on uncontrolled component. */
    defaultValue?:	string,
    /** Countries data can be configured, it defaults to data defined in `AllCountries`. */
    countriesData?: any[],
    /** Whether or not to allow the dropdown. If disabled, there is no dropdown arrow, and the selected flag is not clickable.
    Also we display the selected flag on the right instead because it is just a marker of state. */
    allowDropdown?: boolean,
    /** If there is just a dial code in the input: remove it on blur, and re-add it on focus. */
    autoHideDialCode?: boolean,
    /** Add or remove input placeholder with an example number for the selected country. */
    autoPlaceholder?: boolean,	
    /** Change the placeholder generated by autoPlaceholder. Must return a string. */
    customPlaceholder?: (e: any) => string,	
    /** Don't display the countries you specify. (Array) */
    excludeCountries?: string[]	
    /** Format the input value during initialisation. */
    formatOnInit?: boolean,	
    /** Display the country dial code next to the selected flag so it's not part of the typed number.
     * Note that this will disable nationalMode because technically we are dealing with international numbers,
    but with the dial code separated.
    */
    separateDialCode?: boolean,
    /** Default country. */
    defaultCountry?: string,
    /** GeoIp lookup function. */
    geoIpLookup?: () => any,	
    /** Don't insert international dial codes. */
    nationalMode?: boolean,
    /** Number type to use for placeholders. */
    numberType?: string,
    /** The function which can catch the "no this default country" exception. */
    noCountryDataHandler?: (e: any) => void,
    /** Display only these countries. */
    onlyCountries?: string[],
    /** The countries at the top of the list. defaults to United States and United Kingdom. */
    preferredCountries?: string[]
    /** Optional validation callback function. It returns validation status, input box value and selected country data. */
    onPhoneNumberChange?: (validated: boolean, phoneNumberOnly: string, selectedCountry: SelectedCountryInputValue, completeNumber: string) => any;
    /** Optional validation callback function. It returns validation status, input box value and selected country data. */
    onPhoneNumberBlur?: (e: any) => any;	
    /** Allow main app to do things when a country is selected. */
    onSelectFlag?: (e: any) => void;
    /** Disable this component. */
    disabled?: boolean,
    /** Enable auto focus */
    autoFocus?: boolean,
    /** Render fullscreen flag dropdown when mobile useragent is detected. The dropdown element is rendered as a direct child of document.body */
    useMobileFullscreenDropdown?: boolean,
    /** Set the value of the autoComplete attribute on the input. For example, set it to phone to tell the browser where to auto complete phone numbers. */
    autoComplete?: string,
    /** Pass through arbitrary props to the tel input element. */
    telInputProps?: any,
    /** Format the number. */
    format?: boolean,	
    /** Allow main app to do things when flag icon is clicked. */
    onFlagClick?: (e: any) => void,
    /** The value of the input field. Useful for making input value controlled from outside the component. */
    value?: string,
    /** Static placeholder for input controller. When defined it takes priority over autoPlaceholder. */
    placeholder?: string,
    /** Style object for the wrapper div. Useful for setting 100% width on the wrapper, etc. */
    style?: CSSProperties
  }

  export default class IntlTelInput extends Component<IntlTelInputProps> {}
}